<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
      file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="flagdata2" category="editing" visibility="experimental">
        <shortdescription>\n ******* THIS TASK IS OBSOLETE AND WILL BE DEPRECATED *******\n</shortdescription>
        <shortdescription>*******            USE THE TASK tflagdata            *******\n</shortdescription>
    <shortdescription> All purpose flagging task based on selections. It allows the combination of several modes.</shortdescription>
    <description>
        The task will select a subset of data explicitly for flagging,
        quacking, clipping, flagging of shadowed antennas or flagging based 
        on elevation. Unflagging is also available.
        
        The parameter selectdata will pre-select a subset of the data for flagging.
        Any flagging will be applied to the subset data only. Some modes contain
        specific subparameters for further selections.
        
        Any combination of the following modes can be applied: manualflag, clip,
        shadow, elevation, quack, and summary. When mode summary is 
        combined with any other mode(s), it will run as last and report what has
        been flagged by the other modes.

        In a dual polarization data set, each polarization can be flagged
        separately.  However, at present the calibration and imaging will
        only use data with both parallel hands unflagged.

        There is a vector mode of operation, which executes several flagging
        options in one go.

        The current flags are automatically backed up before applying new flags.
        Previous flag versions can be recovered using the flagmanager task.

    </description>
    <input>
        <param type="string" name="vis" mustexist="true">
               <description>Name of file to flag</description>
               <value></value>
        </param>

        <param type="bool" name="flagbackup">
               <description>Automatically back up the state of flags before the run?</description>
               <value>True</value>
        </param>

        <param type="bool" name="selectdata">
               <description>Data selection parameters, which will affect all modes (antenna, timerange etc)</description>
               <value>True</value>
        </param>
            <param type="any" name="spw" subparam="true">
                   <description>spectral-window/frequency/channel</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="field" subparam="true">
                   <description>Field names or field index numbers: \'\'==>all, field=\'0~2,3C286\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="antenna" subparam="true">
                   <description>antenna/baselines: \'\'==>all, antenna = \'3,VA04\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="uvrange" subparam="true">
                   <description>uv range: \'\'==>all; uvrange = \'0~100klambda\', default units=meters</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="timerange" subparam="true">
                   <description>time range: \'\'==>all, timerange=\'09:14:0~09:54:0\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="correlation" subparam="true">
                   <description>Select data based on correlation</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="scan" subparam="true">
                   <description>scan numbers: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="intent" subparam="true">
                   <description>Select data based on observation intent: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="feed" subparam="true">
                   <description>multi-feed numbers: Not yet implemented</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="array" subparam="true">
                   <description>(sub)array numbers: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>

            <param type="any" name="observation" subparam="true">
                   <description>Select data based on observation ID: \'\'==>all</description>
                   <any type="variant" limittypes="string int"/>
                   <value type="string"></value>
            </param>

        <param type="bool" name="manualflag">
               <description>Flag by antenna, time, field, etc.</description>
               <value>False</value>
        </param>
            <param type="any" name="mf_spw" subparam="true">
                   <description>spectral-window/frequency/channel</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_field" subparam="true">
                   <description>Field names or field index numbers: \'\'==>all, field=\'0~2,3C286\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_antenna" subparam="true">
                   <description>antenna/baselines: \'\'==>all, antenna = \'3,VA04\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_uvrange" subparam="true">
                   <description>uv range: \'\'==>all; uvrange = \'0~100klambda\', default units=meters</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_timerange" subparam="true">
                   <description>time range: \'\'==>all, timerange=\'09:14:0~09:54:0\'</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_scan" subparam="true">
                   <description>scan numbers: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_intent" subparam="true">
                   <description>observation intent: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_feed" subparam="true">
                   <description>multi-feed numbers: Not yet implemented</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>
            <param type="any" name="mf_array" subparam="true">
                   <description>(sub)array numbers: \'\'==>all</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string"></value>
            </param>

            <param type="any" name="mf_observation" subparam="true">
                   <description>Select data based on observation ID: \'\'==>all</description>
                   <any type="variant" limittypes="string int"/>
                   <value type="string"></value>
            </param>
            
        <param type="bool" name="clip">
               <description>Clip data according to value</description>
               <value>False</value>
        </param>        
            <param type="any" name="clipexpr" subparam="true">
                   <description>Expression to clip on</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string">ABS RR</value>
            </param>
            <param type="any" name="clipminmax" subparam="true">
                   <description>Range to use for clipping</description>
                   <any type="variant" limittypes="doubleArray doubleArrayArray"/>
                   <value type="doubleArray"></value>
            </param>
            <param type="any" name="clipcolumn" subparam="true">
                   <description>Data column to use for clipping</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string">DATA</value>
                   <!-- <allowed kind="enum">
                       <value>'DATA'</value>
                       <value>'CORRECTED'</value>
                       <value>'MODEL'</value>
                   </allowed> -->
            </param>
            <param type="any" name="clipoutside" subparam="true">
                   <description>Clip outside the range, or within it</description>
                   <any type="variant" limittypes="bool boolArray"/>
                   <value type="bool">True</value>
            </param>
            <param type="any" name="channelavg" subparam="true">
                   <description>Average over channels (scalar average)</description>
                   <any type="variant" limittypes="bool boolArray"/>
                   <value type="bool">False</value>
            </param>

        <param type="bool" name="shadow">
               <description>Flag shadowed antennas</description>
               <value>False</value>
        </param>       
            <param type="double" name="diameter" subparam="true">
                   <description>Effective diameter (m) to use. -1 ==>antenna diameter</description>
                   <value>-1.0</value>
            </param>

        <param type="bool" name="elevation">
               <description>Flag data from antennas below and above the given elevation range</description>
               <value>False</value>
        </param>       
        <param type="double" name="lowerlimit" subparam="true">
                <description>Lower limiting elevation in degrees</description>
                <value>0.0</value>
         </param>
        <param type="double" name="upperlimit" subparam="true">
                <description>Upper limiting elevation in degrees</description>
                <value>90.0</value>
         </param>

        <param type="bool" name="quack">
               <description>Clip beginning or ending of scans</description>
               <value>False</value>
        </param>
            <param type="any" name="quackinterval" subparam="true">
                   <description>Quack n seconds from scan beginning/end</description>
                   <any type="variant" limittypes="double doubleArray"/>
                   <value type="double">0.0</value>
            </param>
            <param type="any" name="quackmode" subparam="true">
                   <description>Quack mode. \'beg\' ==> beginning of scan. \'endb\' ==> end of scan. \'end\' ==> all but end of scan. \'tail\' ==> all but beginning of scan</description>
                   <any type="variant" limittypes="string stringArray"/>
                   <value type="string">beg</value>
            </param>
            <param type="any" name="quackincrement" subparam="true">
                   <description>Flag incrementally in time?</description>
                   <any type="variant" limittypes="bool boolArray"/>
                   <value type="bool">False</value>
            </param>

        <param type="bool" name="unflag">
               <description>Unflag the data specified</description>
               <value>False</value>
        </param>

        <param type="bool" name="summary">
               <description>List rows and data points flagged</description>
               <value>False</value>
        </param>
            <param type="double" name="minrel" subparam="true">
                   <description>minimum number of flags (relative)</description>
                   <value type="double">0.0</value>
            </param>
            <param type="double" name="maxrel" subparam="true">
                   <description>maximum number of flags (relative)</description>
                   <value type="double">1.0</value>
            </param>
            <param type="int" name="minabs" subparam="true">
                   <description>minimum number of flags (absolute)</description>
                   <value type="int">0</value>
            </param>
            <param type="int" name="maxabs" subparam="true">
                   <description>maximum number of flags (absolute). Use a negative value to indicate infinity.</description>
                   <value type="int">-1</value>
            </param>


        <constraints>
            <when param="selectdata">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="field"><value type="string"></value></default>
                <default param="spw"><value type="string"></value></default>
                <default param="antenna"><value type="string"></value></default>
                <default param="timerange"><value type="string"></value></default>
                <default param="correlation"><value type="string"></value></default>
                <default param="scan"><value type="string"></value></default>
                <default param="intent"><value type="string"></value></default>
                <default param="feed"><value type="string"></value></default>
                <default param="array"><value type="string"></value></default>
                <default param="uvrange"><value type="string"></value></default>
                <default param="observation"><value type="string"></value></default>
            </equals>
            </when>
            <when param="manualflag">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="mf_field"><value type="string"></value></default>
                <default param="mf_spw"><value type="string"></value></default>
                <default param="mf_antenna"><value type="string"></value></default>
                <default param="mf_timerange"><value type="string"></value></default>
                <default param="mf_scan"><value type="string"></value></default>
                <default param="mf_intent"><value type="string"></value></default>
                <default param="mf_feed"><value type="string"></value></default>
                <default param="mf_array"><value type="string"></value></default>
                <default param="mf_uvrange"><value type="string"></value></default>
                <default param="mf_observation"><value type="string"></value></default>
            </equals>
            </when>
            <when param="clip">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="clipexpr"><value type="string">ABS RR</value></default>
                <default param="clipminmax"><value type="doubleArray"></value></default>
                <default param="clipcolumn"><value type="string">DATA</value></default>
                <default param="clipoutside"><value type="bool">True</value></default>
                <default param="channelavg"><value type="bool">False</value></default>
            </equals>
            </when>
            <when param="shadow">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="diameter"><value type="double">-1.0</value></default>
            </equals>
            </when>
            <when param="elevation">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="lowerlimit"><value type="double">0.0</value></default>
                <default param="upperlimit"><value type="double">90.0</value></default>
            </equals>
            </when>
            <when param="quack">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="quackinterval"><value type="double">0.0</value></default>
                <default param="quackmode"><value type="string">beg</value></default>
                <default param="quackincrement"><value type="bool">False</value></default>
            </equals>
            </when>
            <when param="unflag">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
            </equals>
            </when>       
            <when param="summary">
            <equals type="bool" value="False"/>
            <equals type="bool" value="True">
                <default param="minrel"><value type="double">0.0</value></default>
                <default param="maxrel"><value type="double">1.0</value></default>
                <default param="minabs"><value type="int">0</value></default>
                <default param="maxabs"><value type="int">-1</value></default>
            </equals>
            </when>       
        </constraints>
    </input>
<returns type="void"/>

<example>
        The task will flag a subset of data explicitly with any combination of the modes:
            manualflag = flagging based on specific selection parameters
            clip       = clip data according to values
            quack      = remove/keep specific time range at scan beginning/end
            shadow     = remove antenna-shadowed data
            elevation  = remove data below/above given elevations
            summary    = report the amount of flagged data
            unflag     = unflag the specified data. This mode cannot be combined with any other!
            
            NOTE: use testautoflag for RFI detection and auto-flagging.

        The flags stored in the MS are automatically backed up before each run,
        unless flagbackup = False.

        Keyword arguments:
        vis -- Name of input visibility file
                default: none example: vis='ngc5921.ms'

        flagbackup -- Automatically backup flags?
                default: True
                options: True,False

        selectdata -- Select a subset of data for flagging?
                    default: False
                    options: True,False
                    Any flagging will only be applied to the specified selection.

              antenna -- Select data based on baseline
                    default: '' (all); example: antenna='5&amp;6' baseline 5-6
                    antenna='5&amp;6;7&amp;8' #baseline 5-6 and 7-8
                    antenna='5' # all cross-correlation baselines between antenna 5 and all other available
                                  antennas
                    antenna='5,6' # all baselines with antennas 5 and 6
                    antenna='1&amp;&amp;1' # only the auto-correlation baselines for antenna 1
                    antenna='1&amp;&amp;*' # cross and auto-correlation baselines between antenna 1
                                             and all other available antennas
                    antenna='1~7&amp;&amp;&amp;' # only the auto-correlation baselines for antennas in range 1~7
              spw -- Select data based on spectral window and channels
                    default: '' (all); example: spw='1'
                    spw='&lt;2' #spectral windows less than 2
                    spw='&gt;1' #spectral windows greater than 1
                    spw='0:0~10' # first 10 channels from spw 0
                    spw='0:0~5;56~60' # multiple separated channel chunks.
              correlation -- Correlation types
                    default: '' (all);
                    example: correlation='RR LL'
              field -- Select data based on field id(s) or name(s)
                    default: '' (all); example: field='1'
                    field='0~2' # field ids inclusive from 0 to 2
                    field='3C*' # all field names starting with 3C
              uvrange -- Select data within uvrange (default units meters)
                    default: '' (all); example:
                    uvrange='0~1000klambda'; uvrange from 0-1000 kilo-lamgda
                    uvrange='&gt;4klamda';uvranges greater than 4 kilo-lambda
                    uvrange='0~1000km'; uvrange in kilometers
              timerange  -- Select data based on time range:
                    default = '' (all); example,
                    timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                    Note: YYYY/MM/DD can be dropped as needed:
                    timerange='09:14:0~09:54:0' # this time range
                    timerange='09:44:00' # data within one integration of time
                    timerange='&gt;10:24:00' # data after this time
                    timerange='09:44:00+00:13:00' #data 13 minutes after time
              scan -- Select data based on scan number
                    default: '' (all); example: scan='&gt;3'
              intent -- Select data based on observation intent
                    default: '' (all); example: intent='*CAL*,*BAND*'
              feed -- Selection based on the feed - NOT IMPLEMENTED YET
              array -- Selection based on the antenna array
              observation -- Selection based on the observation ID
                    default: '' (all); example: observation='1' or observation=1


        Available modes for flagging are shown below, with their specific subparameters:

        manualflag --  option does data-selected flagging.
                  default: False
                  options: True,False
                  If data is pre-selected using selectdata=True, then flagging
                  will apply only to that subset of the MS. Further selection can be done
                  using the following subparameters.

              mf_antenna -- Select data based on baseline
                    default: '' (all); example: antenna='5&amp;6' baseline 5-6
                    antenna='5&amp;6;7&amp;8' #baseline 5-6 and 7-8
                    antenna='5' # all cross-correlation baselines between antenna 5 and all other available
                                  antennas
                    antenna='5,6' # all baselines with antennas 5 and 6
                    antenna='1&amp;&amp;1' # only the auto-correlation baselines for antenna 1
                    antenna='1&amp;&amp;*' # cross and auto-correlation baselines between antenna 1
                                             and all other available antennas
                    antenna='1~7&amp;&amp;&amp;' # only the auto-correlation baselines for antennas in range 1~7
              mf_spw -- Select data based on spectral window and channels
                    default: '' (all); example: spw='1'
                    spw='&lt;2' #spectral windows less than 2
                    spw='&gt;1' #spectral windows greater than 1
                    spw='0:0~10' # first 10 channels from spw 0
                    spw='0:0~5;56~60' # multiple separated channel chunks.
              mf_field -- Select data based on field id(s) or name(s)
                    default: '' (all); example: field='1'
                    field='0~2' # field ids inclusive from 0 to 2
                    field='3C*' # all field names starting with 3C
              mf_uvrange -- Select data within uvrange (default units meters)
                    default: '' (all); example:
                    uvrange='0~1000klambda'; uvrange from 0-1000 kilo-lamgda
                    uvrange='&gt;4klamda';uvranges greater than 4 kilo-lambda
                    uvrange='0~1000km'; uvrange in kilometers
              mf_timerange  -- Select data based on time range:
                    default = '' (all); example,
                    timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                    Note: YYYY/MM/DD can be dropped as needed:
                    timerange='09:14:0~09:54:0' # this time range
                    timerange='09:44:00' # data within one integration of time
                    timerange='&gt;10:24:00' # data after this time
                    timerange='09:44:00+00:13:00' #data 13 minutes after time
              mf_scan -- Select data based on scan number
                    default: '' (all); example: scan='&gt;3'
              mf_intent -- Select data based on observation intent
                    default: '' (all); example: intent='*CAL*,*BAND*'
              mf_feed -- Selection based on the feed - NOT IMPLEMENTED YET
              mf_array -- Selection based on the antenna array
              mf_observation -- Selection based on the observation ID
                    default: '' (all); example: mf_observation='1' or mf_observation=1
                     
        clip --  Clip data according to values of the following subparameters.
                    default: False
                    options: True,False

              clipexpr -- Clip using the following:
                    default: 'ABS RR'; example: clipexpr='RE XX'
                    options: Any of 'ABS', 'ARG', 'RE', 'IM', 'NORM' followed by
                             any of 'I', 'XX', 'YY', 'RR', 'LL'
              channelavg -- Average data over (selected) channels? Channel
                            selections are taken into account. Flagged channels
                            are excluded from the average. The average is done
                            after applying the specified clipexpr, i.e. scalar
                            averaging.
                    default: False
                    options: True,False
              clipminmax -- Range of data (Jy) that will NOT be flagged
                    default: [] means do not use clip option
                    example: [0.0,1.5]
              clipcolumn -- Column to use for clipping.
                    default: 'DATA'
                    options: 'DATA','CORRECTED','MODEL'
              clipoutside -- Clip OUTSIDE the range ?
                    default: True
                    example: False -&gt; flag data WITHIN the range.
              
        quack -- Option to remove specified part of scan beginning/end
                default: False
                options: True,False
                
              quackinterval -- Time in seconds from scan beginning/end to flag. Make time slightly 
                               smaller than the desired time.
                   default: 0.0
              quackmode -- Quack mode
                   default: 'beg'
                      'beg'  ==> beginning of scan
                      'endb' ==> end of scan. 
                      'tail' ==> all but beginning of scan
                      'end'  ==> all but end of scan.
              quackincrement -- Quack incrementally in time?
                   default: False
                      False  ==> the quack interval is counted from the
                               beginning of the scan
                      True   ==> the quack interval is counted from the
                               first unflagged data in the scan

        shadow -- Option to flag data of shadowed antennas
                default: False
                options: True,False
                 
              diameter -- Effective diameter to use when determining if an antenna
                    is shadowed at a given time stamp. The given value is used
                    for all antennas. If this is set to a negative number the actual 
                    antenna diameters are used.
                  default: -1.0

        elevation -- Option to flag based on antenna elevation
                default: False
                options: True, False
                 
              lowerlimit -- Lower limiting elevation in degrees. Data coming from a baseline
                  where one or both antennas were pointing at a strictly lower elevation
                  (as function of time), will be flagged.
                  default: 0.0

              upperlimit -- Upper limiting elevation in degrees. Data coming from a baseline
                  where one or both antennas were pointing at a strictly higher elevation
                  (as function of time), will be flagged.
                  default: 90.0


              For example, the following

                   flagdata2(elevation = True, upperlimit = 85.0, ...)

              would flag everything above 85 degrees of elevation (as well as data below 0
              degrees of elevation, if any).
		
        unflag -- Unflag the specified data.
               default: False
               options: True,False

        summary -- lists number of rows and data points flagged
                  default: False
                  options: True,False
                  
              minrel -- Minimum number of flags (relative) to include in histogram
                  default: 0.0
              maxrel -- Maximum number of flags (relative) to include in histogram
                  default: 1.0
              minabs -- Minimum number of flags (absolute, inclusive) to include in histogram
                  default: 0
              maxabs -- Maximum number of flags (absolute, inclusive) to include in histogram
                   To indicate infinity, use any negative number
                  default: -1

           In this mode, the task returns a dictionary of flagging statistics.
           Example:

               s = flagdata2(..., summary=True)

           Then s will be a dictionary which contains

               s['total']                  : total number of data
               s['flagged']                : amount of flagged data

           In addition histogram statistics is available, as function of 
           antenna, baseline, spw, channel, fieldId, correlation and scan number.
           For example,

               s['antenna']['2']           : amount of flagged data for antenna named '2'
               s['baseline']['2&amp;&amp;7']       : amount of flagged data for baseline between
                                             antenna names '2' and '7'

           The parameters minrel, maxrel, minabs and maxabs can be used to limit
           which histogram values are returned. For example,

               minrel = 0.8
               maxrel = 1.0
               minabs = 0
               maxabs = 3000

           would report only antennas/baselines/... with more than 80% flagged
           data and at the same time less than or equal to 3000 flagged values.

        -- EXAMPLES --
        
        1) Run multiple modes at the same time. 
        
           -- Flag shadowed antennas and quack data in selected fields 0~5 and manually flag field 2:
           
              flagdata2(vis='my.ms', selectdata=True, field='0~5', manualflag=True, mf_field='2',
                        shadow=True, diameter=40.0, quack=True, quackinterval=0.1)
                        
           -- Quack the auto-correlations of antennas 1~9 using the given interval and manually flag
              the auto-correlation of antenna 8 only.
              
              flagdata2(vis='my.ms', selectdata=True, antenna='1~9&amp;&amp;&amp;', quack=True, quackinterval=0.1, 
                        manualflag=True, mf_antenna='8&amp;&amp;&amp;')
           

        2) Vector mode

        For reasons of performance (in order to reduce the number of loops through
        the MS), several flagdata2 task invocations can be combined into a single
        flagdata2() run by giving vectors of parameters.

        This is only possible for the 'manualflag' mode.

           -- For example, the following two flagdata2 runs:

            vis = 'my.ms'
            manualflag = True
            flagdata2(vis='my.ms', manualflag=True, mf_field='3', mf_timerange = '6:0:0~6:23:00')
            flagdata2(vis='my.ms', manualflag=True, mf_field='3', mf_scan='0', mf_spw='0:60;62;64')

            can be combined into a single run by:

            vis = 'my.ms'
            manualflag = True

            mf_field     = '3'
            mf_spw       = [ ''   , ''            , '0:60;62:64' ]
            mf_timerange = [ ''   , '6:0:0~6:23:0', ''           ]
            mf_scan      = [ ''   , ''            , '0'          ]

            flagdata2()

            Note that mf_field='3' is equivalent to mf_field=['3','3','3']

           -- Another example of vector mode combined with a non-vector mode (clip) is:

           vis = 'my.ms'
           manualflag = True
           mf_antenna = ['2', '3', '5', '8']
           mf_scan = ['4']
           clip = True
           clipminmax = [0.0, 0.2]
           
           flagdata2()
           
           Or the command line call is:
           flagdata2(vis='my.ms', manualflag=True, mf_antenna=['2', '3', '5', '8'], mf_scan=['4'],
                     clip=True, clipminmax=[0.0,0.2])
                     
           At run time, flagdata2 will first flag manually in parallel mode, then it will clip.
           
           -- Flag the following using vector-mode:
              Get rid of the autocorrelations from the MS.        
              Flag antenna with antennaid 8.  
              Flag data (which is bad) in a time range.    
              Flag all antenna 14, 15 data in the time ranges stated.
              
              vis = 'ngc1333.ms'
              manualflag = True
              mf_antenna   = ['*&amp;&amp;&amp;'  , 'VA09', ''   , 'VA14', 'VA15']
              mf_timerange = [''  , ''    , '2003/05/02/21:40:58~2003/05/02/22:01:30', 
                             '2003/05/02/18:50:50~2003/05/02/19:13:30', 
                             '2003/05/02/22:38:49~2003/05/02/22:39:11'] 
              mf_spw       = [''  , ''    , ''   , ''    , '0'   ]
              
              in this example, antenna='*&amp;&amp;&amp;' will flag all auto-correlations in the MS.
              
              flagdata2()
              

           Another possibility of improving the performance [in vector mode, when the vector is
           already so long that the I/O overhead gets negligible and the runtime is proportional 
           to the vector length] is to combine several vector entries into fewer equivalent entries.
           For example, the specification
           
              mf_antenna = ['2', '3', &lt;many more parameters&gt; ]

           could be combined into the equivalent and marginally faster,

              mf_antenna = ['2,3', &lt;many more parameters&gt; ]
 </example>
 </task>
 </casaxml>
