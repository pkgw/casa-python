<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">
  
<task type="function" name="simdata" category="simulation">

  <shortdescription>mosaic simulation task:</shortdescription>
  <description>
    This task will simulate interferometric data.  
    Please contact CASA helpdesk with questions.
  </description>
  
  <input>
    
    <param type="string" name="project">
      <description>root prefix for output file names</description>
      <value>sim</value>
    </param>
    



    <!-- all parms default to keep what's in the image, if the param=="" -->

    <param type="string" name="skymodel">
      <description>model image to observe</description>
      <value type="string"></value>
    </param>

    <param type="string" name="inbright" subparam='true'>
       <description>scale surface brightness of brightest pixel e.g. "1.2Jy/pixel"</description>
       <value type="string"></value>
    </param>
    <!-- TODO parse Jy/pixel, MJy/Sr, eventually K, etc -->
    <!-- TODO document permitted units in online help -->

    <param type="string" name="indirection" subparam="true">
      <description>set new direction e.g. "J2000 19h00m00 -40d00m00"</description>
      <value type="string"></value>
    </param>

    <param type="string" name="incell" subparam='true'>
      <description>set new cell/pixel size e.g. "0.1arcsec"</description>
      <value type="string"></value>
    </param>
    
    <param type="string" name="incenter" subparam="true">
      <description>set new frequency of center channel e.g. "89GHz" (required even for 2D model)</description>
      <value type="string"></value>
    </param>    

    <param type="string" name="inwidth" subparam="true">
      <description>set new channel width e.g. "10MHz" (required even for 2D model)</description>
      <value type="string"></value>
    </param>



    <param type="string" name="complist">
      <description>componentlist to observe</description>
      <value></value>
    </param>

    <param type="string" name="compwidth" subparam="true">
      <description>bandwidth of components</description>
      <value>"8GHz"</value>
    </param>



<!--*************************************************************-->
<!--*************************************************************-->


    <param type="bool" name="setpointings">
      <description></description>
      <value>True</value>
    </param>

    <param type="string" name="ptgfile" subparam="true">
      <description>list of pointing positions</description>
      <value type="string">$project.ptg.txt</value>
    </param>

    <param type="string" name="integration" subparam="true">
      <description>integration (sampling) time</description>
      <value>0</value>
    </param>

<!--  The user can edit the ptg file to repeat ptgs if they wish a scan length
      Longer than the integration time
    <param type="variant" name="scanlength" subparam="true">
      <description>number of integrations or time per pointing</description>
      <value type="int">5</value>
    </param>
-->

    <param type="stringArray" name="direction" subparam="true">
      <description>"J2000 19h00m00 -40d00m00" or "" to center on model</description>
      <value type="string"></value>
    </param>

    <param type="stringArray" name="mapsize" subparam="true">
      <description>angular size of map or "" to cover model</description>
      <value type="vector">
	<value type="string"></value>
	<value type="string"></value>
      </value>
    </param>

    <param type="string" name="maptype" subparam="true">
      <description>hexagonal, square, etc</description>
      <value type="string">hexagonal</value>
      <allowed kind="enum">
	<value type="string">hexagonal</value>
	<value type="string">square</value>
	<value type="string">hex</value>
	<value type="string">ALMA</value>
	<value type="string">alma</value>
	<value type="string">ALMA-OT</value>
      </allowed>
    </param>

    <param type="string" name="pointingspacing" subparam="true">
      <description>spacing in between pointings or "0.25PB" or "" for 0.5 PB</description>
      <value></value>
    </param>

<!--
    <param type="any" name="relmargin">
      <any type="variant" limittypes="double int"/>
      <description>space btw. pointings and edge, relative to pointingspacing</description>
      <value type="double">1.0</value>
    </param>
-->
    <param type="string" name="caldirection" subparam="true">
      <description>pt source calibrator [experimental]</description>
      <value type="string"></value>
    </param>

    <param type="string" name="calflux" subparam="true">
      <description></description>
      <value>1Jy</value>
    </param>







<!--*************************************************************-->
<!--  observe always reads from $project.skymodel file now -->

    <param type="bool" name="observe">
      <description>calculate visibilites using ptgfile</description>
      <value>True</value>
    </param>

    <param type="string" name="refdate" subparam="true">
      <description>date of observation - not critical unless concatting simulations</description>
      <value>2014/01/01</value>
    </param>

    <param type="string" name="hourangle" subparam="true">
      <description>hour angle of observation center e.g. -3:00:00, or "transit"</description>
      <value>transit</value>
    </param>
    
    <param type="string" name="totaltime" subparam="true">
      <description>total time of observation or number of repetitions</description>
      <value>7200s</value>
    </param>

    <param type="string" name="antennalist" subparam="true">
      <description>antenna position file or "" for no interferometric MS</description>
      <value>alma.out10.cfg</value>
    </param>

<!-- TODO put in more than one synth_antfile to do ALMA and ACA config - 
it'll do them for the same amount of time -->

    <param type="string" name="sdantlist" subparam="true">
      <description>single dish antenna position file or "" for no total power MS</description>
      <value>aca.tp.cfg</value>
    </param>

    <param type="int" name="sdant" subparam="true">
      <description>single dish antenna index in file</description>
      <value>0</value>
    </param>





<!--  NOISE  -->

    <param type="string" name="thermalnoise">
      <description>add thermal noise: [tsys-atm|tsys-manual|""]</description>
      <value type="string"></value>
      <allowed type="enum">
	<value type="string"></value>
	<value type="string">tsys-atm</value>
	<value type="string">tsys-manual</value>
	<value type="string">False</value>
	<value type="string">F</value>
      </allowed>
    </param>    
    <param type="double" name="user_pwv" subparam="true">
      <description>Precipitable Water Vapor in mm</description>
      <value>1.</value>
    </param>

    <param type="double" name="t_ground" subparam="true">
      <description>ambient temperature</description><value>270.</value>
    </param>
    <param type="double" name="t_sky" subparam="true">
       <description>atmospheric temperature</description>
       <value>260.</value>
    </param>	
    <param type="double" name="tau0" subparam="true">
      <description>zenith opacity</description><value>0.1</value>
    </param>
    <param type="int" name="seed" subparam="true">
      <description>random number seed</description><value>11111</value>
    </param>
    
    <param type="double" name="leakage">
      <description>cross polarization</description>
      <value>0.0</value>
    </param>    







<!--  IMAGE   -->    

    <param type="bool" name="image">
      <description>(re)image $project.ms to $project.image</description>
      <value>True</value>
    </param>    

    <param type="string" name="vis" subparam='true'>
      <description>Measurement Set(s) to image</description>
      <value>default</value>
    </param>

    <param type="string" name="modelimage" subparam='true'>
      <description>prior image to use in clean e.g. existing single dish image</description>
      <value type="string"></value>
    </param>
    
    <param type="string" name="cell" subparam='true'>
      <description>cell size with units or "" to equal model</description>
      <value type="string"></value>
    </param>
    
    <param type="intArray" name="imsize" subparam="true">
      <description>output image size in pixels (x,y) or 0 to match model</description>
      <value type="vector"><value>128</value><value>128</value></value>
    </param>

<!-- force the same channelization as the ms -->
<!--
    <param type="string" name="start" subparam="true">
      <description>frequency of first channel (default=ms)</description>
      <value>89GHz</value>
    </param>    
    <param type="string" name="width" subparam="true">
      <description>channel width (default=ms)</description>
      <value>10MHz</value>
    </param>
    <param type="int" name="nchan" subparam="true">
      <description>number of channels or -1 for full range</description>
      <value>-1</value>
    </param>
-->    
    <param type="int" name="niter" subparam="true">
      <description>maximum number of iterations (0 for dirty image)</description>
      <value>500</value>
    </param>

    <param type="string" name="threshold" subparam="true">
      <description>flux level (+units) to stop cleaning</description>
      <value>0.1mJy</value>
    </param>

    <param type="string" name="weighting" subparam="true">
      <description>weighting to apply to visibilities</description>
      <value>natural</value>
      <allowed kind="enum">
	<value>natural</value>
	<value>uniform</value>
	<value>briggs</value>  <!-- robust=0.5  -->
      </allowed>
    </param>

    <param type="any" name="mask" subparam="true">
      <description>clean mask -- see help clean</description>
      <any type="variant"/>
      <!-- <value type="stringArray"></value> -->
      <value type="vector"><value></value></value>
    </param>

    <param type="stringArray" name="outertaper" subparam="true">
      <description>uv-taper on outer baselines in uv-plane</description>
      <value type="vector">
	<value></value>
      </value>
    </param>

    <param type="string" name="stokes" subparam="true">
      <description>Stokes params to image</description>
      <value>I</value>
      <allowed kind="enum">
	<value>I</value>
	<value>IV</value>
	<value>QU</value>
	<value>IQUV</value>
	<value>RR</value>
	<value>LL</value>
	<value>RRLL</value>
	<value>XX</value>
	    <value>YY</value>
	    <value>XXYY</value>
      </allowed>
    </param>





<!--  ANALYZE   -->    
    
    <param type="bool" name="analyze">
      <description>(only first 6 selected outputs will be displayed)</description>
      <value>False</value>
    </param>
    
    <param type="bool" name="showarray" subparam="true">
      <description>like plotants (ignored in single dish simulation)</description>
      <value>False</value>
    </param>

    <param type="bool" name="showuv" subparam="true">
      <description>display uv coverage</description>
      <value>True</value>
    </param>

    <param type="bool" name="showpsf" subparam="true">
      <description>display synthesized (dirty) beam (ignored in single dish simulation)</description>
      <value>True</value>
    </param>

    <param type="bool" name="showmodel" subparam="true">
      <description>display sky model at original resolution</description>
      <value>True</value>
    </param>
    
    <param type="bool" name="showconvolved" subparam="true">
      <description>display sky model convolved with output beam</description>
      <value>False</value>
    </param>
    
    <param type="bool" name="showclean" subparam="true">
      <description>display the synthesized image</description>
      <value>True</value>
    </param>

    <param type="bool" name="showresidual" subparam="true">
      <description>display the clean residual image (ignored in single dish simulation)</description>
      <value>False</value>
    </param>

    <param type="bool" name="showdifference" subparam="true">
      <description>display difference image</description>
      <value>True</value>
    </param>
    
    <param type="bool" name="showfidelity" subparam="true">
      <description>display fidelity</description>
      <value>True</value>
    </param>
    




    <param type="string" name="graphics">
      <description>display graphics at each stage to [screen|file|both|none]</description>
      <value type="string">both</value>
      <allowed kind="enum">
	<value>screen</value>
	<value>file</value>
	<value>both</value>
	<value>none</value>
	<value></value>
      </allowed>
    </param>

    <param type="bool" name="verbose">
      <description></description>
      <value>False</value>
    </param>

    <param type="bool" name="overwrite">
      <description>overwrite files starting with $project</description>
      <value>True</value>
    </param>



        
    
<!--  CONSTRAINTS  -->    
    
    <constraints>
      <when param="skymodel">
	<notequals value="">
	  <default param="inbright"><value type="string"></value></default>
	  <default param="indirection">
	    <value type="string"></value>
	  </default>
	  <default param="incell"><value type="string"></value></default>
	  <default param="incenter">
	    <description>set central frequency (required even for 2D image)</description>
	    <value type="string"></value>
	  </default>
	  <default param="inwidth">
	    <description>set channel width or bandwidth of 2D / continuum image</description>
	    <value type="string"></value>
	  </default>
	</notequals>
      </when>
      <!-- **********************************************************  -->
      <when param="complist">
	<notequals value="">
	  <default param="compwidth"><value type="string">8GHz</value></default>
	</notequals>
      </when>
      <!-- **********************************************************  -->
      <when param="setpointings">
	<equals type="bool" value="True">	  
	  <default param="integration"><value type="string">10s</value></default>
	  <default param="direction">
	    <description>center of map or "" to center on the model</description>
	    <value type="string"></value>
	  </default>
	  <default param="mapsize" type="stringArray">
	    <value type="vector">
	      <value type="string">''</value>
	      <value type="string">''</value>
	    </value>
	  </default>
	  <default param="maptype" type="string">
	    <value type="string">ALMA</value>
	  </default>
	  <default param="pointingspacing"><value type="string"></value></default>
	</equals>
	<equals type="bool" value="False">
	  <default param="ptgfile"><value type="string">$project.ptg.txt</value></default>
	  <default param="integration"><value type="string">10s</value>
	  <description>integration time (see below)</description></default>
	</equals>
      </when>
      <!-- **********************************************************  -->
      <when param="observe">
	<equals type="bool" value="True">
	  <default param="antennalist"><value type="string">alma.out10.cfg</value></default>
	  <default param="refdate"><value type="string">2012/05/21</value></default>
	  <default param="hourangle"><value type="string">transit</value></default>
	  <default param="totaltime"><value>"7200s"</value></default>
	  <default param="caldirection"><value type="string"></value></default>
	  <default param="calflux"><value type="string">1Jy</value></default>
	  <default param="sdantlist"><value type="string"></value></default>
	  <default param="sdant"><value type="int">0</value></default>
	</equals>
	<equals type="bool" value="False">
	  <default param="antennalist"><value type="string"></value>
	  <description>antenna info can be used to calculate the primary beam</description></default>
	  <default param="sdantlist"><value type="string"></value></default>
	  <default param="sdant"><value type="int">0</value></default>
	</equals>
      </when>
      <!-- **********************************************************  -->
      <when param="thermalnoise">
	<equals type="string" value=""/>
	<equals type="string" value="False"/>
	<equals type="string" value="F"/>
	<equals type="string" value="tsys-atm">
	  <default param="user_pwv"><value>1.</value></default>
	  <default param="t_ground"><value>269.</value></default>
	  <default param="seed"><value>11111</value></default>
	</equals>	
	<equals type="string" value="tsys-manual">
	  <default param="t_ground"><value>269.</value></default>
	  <default param="t_sky"><value>263.</value></default>
	  <default param="tau0"><value>0.1</value></default>
	  <default param="seed"><value>11111</value></default>
	</equals>
      </when>
      <!-- **********************************************************  -->
      <when param="image">
	<equals type="bool" value="True">
	  <default param="vis"><value type="string">default</value></default>
	  <default param="modelimage"><value type="string"></value></default>
	  <default param="imsize">
	    <value>0</value>
	  </default>
	  <default param="cell"><value type="string"></value></default>
	  <default param="niter"><value>500</value></default>
	  <default param="threshold"><value type="string">0.1mJy</value></default>
	  <default param="weighting"><value type="string">natural</value></default>
	  <default param="mask">      <value type="vector"><value></value></value></default>
	  <default param="outertaper"><value type="vector"><value></value></value></default>
	  <default param="stokes"><value type="string">I</value></default>
	</equals>
	<equals type="bool" value="False"/>
      </when>
      <!-- **********************************************************  -->
      <when param="analyze">
	<equals type="bool" value="False"/>
	<equals type="bool" value="True">
	  <default param="showarray"><value type="bool">False</value></default>
	  <default param="showuv"><value type="bool">True</value></default>
	  <default param="showpsf"><value type="bool">True</value></default>
	  <default param="showmodel"><value type="bool">True</value></default> 
	  <default param="showconvolved"><value type="bool">False</value></default>
	  <default param="showclean"><value type="bool">True</value></default>
	  <default param="showresidual"><value type="bool">False</value></default>
	  <default param="showdifference"><value type="bool">True</value></default>
	  <default param="showfidelity"><value type="bool">True</value></default>
	</equals>
      </when>
    </constraints>
    
    
    
  </input>
  <returns type="void"/>
  
<example>
mosaic simulation task:

    This task simulates interferometric observations (currently 
    only ALMA can be done easily).  New functionality is actively 
    being added, so if you have changed versions of CASA, check 
    the inputs carefully.
    Please contact CASA experts with any questions, especially 
    about features noted below as *experimental*    
    -------------------------------
    project -- root filename for all output files.
    -------------------------------
    skymodel -- image model of the sky, 
         with optional parameters that can be overriden
    inbright -- peak brightness in Jy/pixel, or "" for unchanged
       * NOTE: "unchanged" will take the numerical values in your image 
         and assume they are in Jy/pixel, even if it says some other unit 
         in the header. 
    indirection -- central direction, or "" for unchanged
    incell -- spatial pixel size, or "" for unchanged
    incenter -- frequency of center channel e.g. "89GHz", or "" for unchanged
    inwidth -- width of channels, or "" for unchanged - this should be a 
         string representing a quantity with units e.g. "10MHz"
       * NOTE: only works reliably with frequencies, not velocities
       * NOTE: it is not possible to change the number of spectral planes
         of the sky model, only to relabel them with different frequencies
         That kind of regridding can be accomplished with the CASA toolkit.
    -------------------------------
    complist -- component list model of the sky, added to or instead of skymodel
    compwidth -- bandwidth of components; if simulating from components only, 
         this defines the bandwidth of the MS and output images
    -------------------------------
    setpointings -- calculate a map of pointings, or if false, provide ptgfile
       * if graphics selected, display the pointings shown on the model image
    ptgfile -- a text file specifying directions in the same 
         format as the example, and optional integration times, e.g.
         #Epoch     RA          DEC      TIME(optional)
         J2000 23h59m28.10 -019d52m12.35 10.0
       * if the time column is not present in the file, it will use
         "integration" for all pointings.
       * NOTE: at this time the file should contain only science pointings:
         simdata will observe these, then optionally the calibrator, 
         then the list of science pointings again, etc, until totaltime
         is used up. 
    integration --- Time interval for each integration e.g '10s'
       * NOTE: to simulate a "scan" longer than one integration, use 
         setpointings to generate a pointing file, and then edit the 
         file to increase the time at each point to be larger than 
         the parameter integration time.
    direction -- mosaic center direction e.g 'J2000 19h00m00 -40d00m00'
       * can optionally be a list of pointings
       * otherwise simdata will pack mapsize according to maptype
    mapsize -- angular size of map 
       * set to "" to span the model image
    maptype -- hexagonal, linear, or ALMA for the same hex algorithm as the
         ALMA OT 
    pointingspacing -- spacing in between beams e.g '1arcsec'
         or "0.25PB" to use 1/4 of the primary beam FWHM, or 
         "" will use the primary beam HWHM.
    -------------------------------
    observe -- calculate visibilities from skymodel (which may have been 
         modified above, (optionally) complist, and $ptgfile (which 
         may have been generated above)
       * if graphics selected, display the array (like plotants), the uv 
         coverage, the synthesized (dirty) beam, and ephemeris information
       * if simulating from component list only, you should specify
         compwidth, the desired bandwidth - 
         there is not currently a way to specify the spectrum of a component, 
         so simulations from a componentlist only will be continuum (1 chan)
    refdate -- date of simulated observation eg: '2012/05/21'
    hourangle -- hour angle of observation e.g. '-3h'
    totaltime --- total time of observation e.g '7200s' or if an number without
         units, interpreted as the number of times to repeat the map
    antennalist -- ascii file containing antenna positions.
         each row has x y z coordinates and antenna diameter; 
         header lines are required to specify the observatory name
         and coordinate system e.g. 
           # observatory=ALMA
           # coordsys=UTM
           # datum=WGS84
           # zone=19
       * standard arrays are found in your CASA data repository, 
         os.getenv("CASAPATH").split()[0]+"/data/alma/simmos/"        
       * if "", will not not produce an interferometric MS
       * a string of the form "alma;0.5arcsec" will be parsed into a full 12m ALMA
         configuration.  This only works for full ALMA and may fail to find the 
         standard configuration files on some systems - see casaguides.nrao.edu
    caldirection -- *NEW* an unresolved calibrator can be observed 
         interleaved with the science pointings.  This feature is 
         experimental, so please contact us with any questions.
       * The calibrator is implemented as a point source clean component 
         with this direction and flux=calflux
    sdantlist -- antenna position file with antennas to be used for 
         single dish or total power simulation 
       * if "", will not produce a total power MS
    sdant -- the index of the antenna in the list to use for total 
         power.  defaults to the first antenna on the list. 
    -------------------------------
    thermalnoise -- add thermal noise 
       * this parameter takes two possible values:
       - tsys-atm: J. Pardo's ATM library will be used to construct an
           atmospheric profile for the ALMA site:
           altitude 5000m, ground pressure 650mbar, relhum=20%, 
           a water layer of user_pwv at altitude of 2km,
           the sky brightness temperature returned by ATM, 
           and internally tabulated receiver temperatures
       - tsys-manual: instead of using the ATM model, specify the zenith 
           sky brightness and opacity manually.  Noise is added and then
           the visibility flux scale is referenced above the atmosphere. 
       * In either mode, noise is calculated using an antenna spillover 
           efficiency of 0.96, taper of 0.86, 
           surface accuracy of 25 and 300 microns for ALMA and EVLA
           respectively (using the Ruze formula for surface efficiency),
           correlator efficiencies of 0.95 and 0.91 for ALMA and EVLA, 
           receiver temperatures for ALMA of 
               17, 30, 37, 51, 65, 83,147,196,175,230 K interpolated between
               35, 75,110,145,185,230,345,409,675,867 GHz,
           for EVLA of 
               500, 70,  60,  55,  100, 130, 350 K interpolated between
               0.33,1.47,4.89,8.44,22.5,33.5,43.3 GHz,
           for SMA of
               67,  116, 134, 500 K interpolated between
               212.,310.,383.,660. GHz
       * These are only approximate numbers and do not take into account 
         performance at edges of receiver bands, neither are they guaranteed
         to reflect the most recent measurements.  Caveat emptor and use the 
         sm tool to add noise if you want more precise control.
    t_ground -- ground/spillover temperature in K 
    user_pwv -- precipitable water vapor if constructing an atmospheric model
    t_sky -- atmospheric temperature in K [for tsys-manual]
    tau0 -- zenith opacity at observing frequency [for tsys-manual]
       * see casaguides.nrao.edu for more information on noise, 
         in particular how to add a phase screen using the toolkit
    seed -- random number seed for noise generation
    -------------------------------
    leakage -- add cross polarization corruption of this fractional magnitude
    -------------------------------
    image -- invert and deconvolve the measurement set(s)
       * NOTE: interactive clean or more parameters than the subset visible
         here are available by simply running the clean task directly, 
         then returning to simdata to run "analyze" if desired.
       * NOTE: the channelization of the output image cube will be the 
         same as that in the simulated Measurement Set.
       * if graphics selected, display the clean image and residual image
       * uses Cotton-Schwab clean for single fields and Mosaic gridding
         for multiple fields (with Clark PSF calculation in minor cycles).
    vis -- the simulated interferometric MS, or total-power one, or both
       * NOTE: vis='default' will automatically set proper MS name(s) ONLY
         when either observing or applying any noise in the same run.
       * you can use '$project' to let the task automatically replace it to
         the project name, e.g., vis='$project.noisy.ms,$project.nosisy.sd.ms'.
    modelimage -- prior (e.g. SD) image to be used in clean
    cell -- cell size e.g '10arcsec'.  "" defaults to the skymodel cell
    imsize -- image size in spatial pixels (x,y)
       0 or -1 will use the model image size; example: imsize=[500,500]
    niter -- mumber of clean/deconvolution iterations, 0 for no cleaning
    threshold -- flux level to stop cleaning
    weighting -- weighting to apply to visibilities
       options: 'natural','uniform','briggs' (robust=0.5)
    mask -- Specification of cleanbox(es), mask image(s), primary beam
       coverage level, and/or region(s) to be used for CLEANing.
       CLEAN tends to perform better, and is less likely to diverge, if 
       the CLEAN component placement is limited by a mask to where real 
       emission is expected to be.  e.g. pixel ranges mask=[110,110,150,145],
       filename of mask image mask='myimage.mask', or a file with mask 
       regions --  see help for the clean task.
    outertaper -- apply additional uv outer taper of visibilities
    stokes -- Stokes parameters to image; 'I','IV','IQU','IQUV'
    -------------------------------
    analyze -- compute and display difference between model and output, 
         fidelity, etc. 
    showarray -- like plotants (ignored in single dish simulation)
    showuv -- display uv coverage
    showpsf -- display synthesized (dirty) beam (ignored in single dish simulation)
    showmodel -- display sky model at original resolution
    showconvolved -- display sky model convolved with output beam 
    showclean -- display the synthesized image
    showresidual -- display the clean residual image (ignored in single dish simulation)
    showdifference -- display difference between output cleaned image and 
         input model sky image convolved with output synthesized beam
    showfidelity -- display fidelity image
         fidelity = input/max( abs(input-output), 0.7*rms(output) )

    graphics -- view plots on the screen, saved to file, both, or neither
    verbose -- print extra information to the logger and terminal
    overwrite -- overwrite existing files in the project subdirectory
    
    Note that the RMS is calculated in the lower quarter of the image.  
         This is likely not the best choice, so you are encouraged to 
         measure RMS yourself in an off-source region using the viewer.


    -------------------------------
    How to specify a model image:
    -------------------------------
    * simdata requires a CASA or fits image. If you merely have a grid of 
      numbers, you will need to write them out as fits or write a CASA script to
      read them in and use the ia tool to create an image and insert the data.
    
    * simdata does NOT require a coordinate system in the header. If the
      coordinate information is incomplete, missing, or you would like to
      override it, set the appropriate "in" paremeters.  
      In the absence of other information, simdata will assume that the axes of 
      your input correspond to RA, Dec, and (optionally) frequency and 
      (optionally) Stokes parameter.  

    * If you have a proper Coordinate System, simdata will so its best to
      generate visibilities from that, and then create a synthesis image
      according to the specified user parameters.  Regridding the
      spectral dimension may not have complete flexibility yet.

    * You can manipulate an image header with the "imhead" task, or you can
      delve deeper with the ia and cs tools.  If you use the tools, you should
      be aware that a CoordinateSystem in CASA can exist independently of an
      Image.  Once the CoordinateSystem is detached from the image, it is the
      users responsibility to do any manipulation e.g. axis reordering on
      both. Example:
        ia.open("myimage_filename")
        ia.summary() # see header as attached to the image
        csys=ia.coordsys() # detach the CoordinateSystem
        csys.summary() # examine it
        csys.setreferencepixel([100,100]) 
        arr=ia.getchunk() # get the data from the Image
        ia.done()
        csys.reorder([0,2,1])  # reorder the CoordinateSystem
        arr=arr.reorder([0,2,1])  # reorder the data         
        ia.fromshape(outfile="mynewimage_file",shape=[32,32,256],csys=csys.torecord(),overwrite=True)
            # make a new image, with the right shape and CoordinateSystem
        ia.putchunk(arr)   # put the data into the new image.
        csys.done()
        ia.done()

    -------------------------------
    Output produced: (not all will always exist, depending on input parameters)
    To support different runs with different arrays, the names have the
    configuration name from antennalist appended.
    -------------------------------

    project.[cfg].skymodel = 4d input sky model image (optionally) scaled
    project.[cfg].skymodel.flat.regrid.conv = input sky regridded to match the
        output image, and convolved with the output synthesized beam
    project.[cfg].skymodel.png = diagnostic figure of sky model with pointings

    project.[cfg].ptg.txt = list of mosaic pointings
    project.[cfg].quick.psf = psf calculated from uv coverage
    project.[cfg].ms = noise-free measurement set
    project.[cfg].noisy.ms = corrupted measurement set 
    project.[cfg].observe.png = diagnostic figure of uv coverage and 
         visibilities
	    
    project.[cfg].image = synthesized image
    project.[cfg].flux.pbcoverage = promary beam correction for mosaic image
    project.[cfg].residual = residual image after cleaning
    project.[cfg].clean.last = parameter file of what parameters were used in
          the clean task
    project.[cfg].psf = synthesized beam calculated from weighted uv 
          distribution
    project.[cfg].image.png = diagnostic figure of clean image and residual
	    
    project.[cfg].fidelity = fidelity image
    project.[cfg].analysis.png = diagnostic figure of difference and fidelity
	    
    project.[cfg].simdata.last = saved input parameters for simdata task

</example>
</task>
</casaxml>
