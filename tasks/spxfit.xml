<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>

<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<!-- This is the task interface to ia.fitprofile for spectral index fitting          -->

<task type="function" name="spxfit" category="analysis" visibility="experimental">

<shortdescription>Fit a 1-dimensional model to an image or image region for determination of spectral index.</shortdescription>

<description>
</description>

<input>
    <param type="any" name="imagename" >
        <any type="variant" listtypes="string stringArray"/>
    	<description>Name of the input image(s)</description>
    	<value type="string"></value>
        <example>imagenam='ngc5921_task.image'</example>
    </param>
    <param type="string" direction="in" name="box">
        <description>Rectangular box in direction coordinate blc, trc. Default: entire image ("").</description>
        <value></value>
        <example>box="4,4,10,10"</example>
    </param>
    <param type="string" direction="in" name="region">
        <description>Region of interest. See help par.region for possible specifications. Default: Do not use a region.</description>
        <value></value>
        <example>region="myregion.rgn"</example>
    </param>
    <param type="string" direction="in" name="chans">
        <description>Channels to use. Channels must be contiguous. See "help par.chans" for examples. Default: all channels ("").</description>
        <value></value>
    </param>
    <param type="string" direction="in" name="stokes">
        <description>Stokes planes to use. Planes must be contiguous. Default: all stokes ("").</description>
        <value></value>
        <example>stokes="I"</example>
    </param>
    <param type="int" direction="in" name="axis">
        <description>The profile axis. Default: use the spectral axis if one exists, axis 0 otherwise (&lt;0).</description>
        <value>-1</value>
        <example>axis=3</example>
    </param>
    <param type="string" direction="in" name="mask">
        <description>Mask to use. See help par.mask. Default is none..</description>
        <value></value>
    </param>
    <param type="int" direction="in" name="minpts">
        <description>Minimum number of unmasked points necessary to attempt fit.</description>
        <value>0</value>
    </param>
    <param type="bool" direction="in" name="multifit">
        <description>If true, fit a profile along the desired axis at each pixel in the specified region. If false, average the non-fit axis pixels and do a single fit to that average profile. Default False.</description>
        <value>False</value>
        <example>multifit=True</example>
     </param>
     <param type="doubleArray" name="plpest">
        <description>Initial estimates for power logarithmic polynomial coefficients.</description>
        <value/>
    </param>
    <param type="boolArray" name="plpfix">
        <description>Fix the corresponding power logarithmic polynomial coefficients during the fit. True=>hold fixed.</description>
        <value/>
    </param>
    <param type="any" name="plpdiv">
        <any type="variant"/>
        <description>Divisor (numerical value or quantity) to use in the logarithmic terms of the plp function. 0 => calculate a useful value on the fly.</description>
        <value>0</value>
    </param>
    <param type="string" name="plpsol">
        <description>Name of the pwoer logarithmic polynomial solution image to write.</description>
        <value/>
    </param>
    <param type="string" name="plperr">
        <description>Name of the pwoer logarithmic polynomial error image to write.</description>
        <value/>
    </param>
    <param type="string" direction="in" name="model">
        <description>Name of model image. Default: do not write the model image ("").</description>
        <value></value>
        <example>model="mymodel.im"</example>
    </param>
    <param type="string" direction="in" name="residual">
        <description>Name of residual image. Default: do not write the residual image ("").</description>
        <value></value>
        <example>residual="myresid.im"</example>
    </param>
    <param type="bool" name="wantreturn">
        <description>Should a record summarizing the results be returned?</description>
        <value>True</value>
        <example>wantreturn=True</example>
    </param>
    <param type="bool" direction="in" name="stretch" subparam="true">
        <description>Stretch the mask if necessary and possible? See help par.stretch </description>
        <value>False</value>
    </param>
    <param type="bool" direction="in" name="logresults">
        <description>Output results to logger?</description>
        <value>True</value>
    </param>
    <param type="string" direction="in" name="logfile">
        <description>File in which to log results. Default is not to write a logfile.</description>
        <value/>
    </param>
    <param type="bool" direction="in" name="append" subparam="true">
        <description>Append results to logfile? Logfile must be specified. Default is to append. False means overwrite existing file if it exists.</description>
        <value>True</value>
    </param>
    <param type="any" direction="in" name="sigma">
        <any type="variant" limittypes="string stringArray doubleArray intArray"/>
        <description>Standard deviation array or image name(s).</description>
        <value type="string"/>
    </param>
    <param type="string" direction="in" name="outsigma" subparam="true">
        <description>Name of output image used for standard deviation. Ignored if sigma is empty.</description>
        <value/>
    </param>
    <constraints>
        <when param="mask">
            <notequals type="string" value="">
                <default param="stretch"><value type="bool">False</value></default>
            </notequals>
        </when>
        <when param="multifit">
            <equals type="bool" value="True">
                <default param="plpsol">
                    <value>""</value>
                </default>
                <default param="plperr">
                    <value>""</value>
                </default>
            </equals>
        </when>
        <when param="logfile">
            <notequals type="string" value="">
                <default param="append">
                    <value>True</value>
                </default>
            </notequals>
        </when>
        <when param="sigma">
            <notequals type="string" value="">
                <default param="outsigma"><value type="string"/></default>
            </notequals>
        </when>
    </constraints>
</input>

<returns type="record"/>

<example>
    
This task simultaneously fits one or more gaussian singlets lorentzian singlets, gaussian multiplets, and/or a polynomial to one dimensional profiles.

ARAMETER SUMMARY
imagename       Name of the input image(s). More than one image name can be given as an
                array, in which case the images are concatenated along the specified axis
                and the resultant image is what is used by the fitter. In this case,
                all images must have the same dimensions along all axes other than the fit axis.
box             Direction plane box specification, "blcx, blcy, trcx, trcy". Only one box
                may be specified. If not specified, region is used if specified. If region
                is also not specified, entire directional plane unioned with any chans and
                stokes specification determines the region.
region          Region of interest. See help par.region for possible specifications.
chans           Optional contiguous frequency specification. Not used if
                region is specified. See "help par.chans" for examples. Default is all channels.
stokes          Contiguous stokes planes specification. Not used if region is specified.
                Default is all stokes.     
axis            Axis along which to do the fit(s). &lt;0 means use the spectral axis or the
                zeroth axis if a spectral axis is not present.
mask            Mask to use. See help par.mask. Default is none.
stretch         Stretch the input mask if necessary and possible? Only used if a mask is specified.
                See help par.stretch.
minpts          Minimum number of points necessary to attempt a fit.
multifit        Fit models at each pixel in region (true) or average profiles and fit a single model (false).
plpest          Initial estimates for power logarithmic polynomial coefficients.
plpfix          Fix the corresponding power logarithmic polynomial parameters during the fit. True=>hold fixed
plpdiv          Divisor (numerical value or quantity) to use in the logarithmic terms of the plp f
                unction. 0 => calculate a useful value on the fly.
plpsol          Name of the pwoer logarithmic polynomial coeffecients solution image to write.
plperr          Name of the pwoer logarithmic polynomial coeffecients error image to write.
model           Name of model image to write.
residual        Name of residual image to write.
wantreturn      If true, return a record summarizing the fit results, if false, return false.
stretch         Stretch the mask if necessary and possible? See help par.stretch 
logresults      Output results to logger?
logfile         File in which to log results. Default is not to write a logfile.
append          Append results to logfile? Logfile must be specified. Default is to append. False means overwrite existing file if it exists.
sigma           Standard deviation numerical array, image name (string), or string array of names of images which will be
                concatenated to create the sigma image that is used by the fitter.
outsigma        Name of output image used for standard deviation. Ignored if sigma is empty.

This application fits a power log polynomial to one dimensional profiles. This function has the form

y = c0*x/D**(c1 + c2*ln(x/D) + c3*ln(x/D)**2 + cn*ln(x/D)**(n - 1))

and is a function commonly used in determining the spectral index of a source (with alpha=c1). The set of coefficients c0 ... cn can
be solved for. Initial estimates for the these values should be supplied via the plpest parameter. The number of values given
in this array will be the number of coeffecients that are solved for. One may specify which coefficients should be held
fixed during the fit in the plpfix array. If supplied, this array should have the same number of elements as plpest. A value
of True means the corresponding coefficient will be held fixed during the fit. An empty array indicates that no
parameters will be held fixed. This is the default.

D is a normalization constant used to allow for abscissa values closer to unity than they are in the image when they are
sent to the fitter. This generally improves the probability that the fit will converge. This parameter may be specified via
the plpdiv parameter. A value of 0 (the default) indicates that the application should determine a reasonable value for D,
which is determined via

D = 10**int(log10(sqrt(min(x)*max(x))))

where min(x) and max(x) are the minimum and maximum image abscissa values, respectively.

Note that, as with fitting any function, the likelihood of getting a good solution increases with the number of
good data points as well as the goodness of the initial estimate. This is especially true in cases of fitting functions
such as this. It is possible that the solution found might not be the best one, and
so, if a solution is found, it is recommended that the fit be repeated using the solutions of the previous fit as the
initial estimates for the new fit. When the solutions are the same as the previous fit, that is very likely the best
solution.

AXIS
The axis parameter indicates on which axis profiles should be fit; a value &lt;0 indicates the spectral axis should be used,
or if one does not exist, that the zeroth axis should be used.

MINIMUM NUMBER OF PIXELS
The minpts parameter indicates the minimum number of unmasked pixels that must be present in order for a fit
to be attempted. When multifit=T, positions with too few good points will be masked in any output images.

ONE FIT OF REGION AVERAGE OR PIXEL BY PIXEL FIT
The multifit parameter indicates if profiles should be fit at each pixel in the selected region (true), or if the profiles in that region should be
averaged and the fit done to that average profile (false).

INCLUDING STANDARD DEVIATIONS OF PIXEL VALUES
If the standard deviations of the pixel values in the input image are known and they vary in the image (eg they are higher for pixels
near the edge of the band), they can be included in the sigma parameter. This parameter takes either an array or an image name. The
array or image must have one of three shapes: 1. the shape of the input image, 2. the same dimensions as the input image with the lengths
of all axes being one except for the fit axis which must have length corresponding to its length in the input image, or 3. be one
dimensional with lenght equal the the length of the fit axis in the input image. In cases 2 and 3, the array or pixels in sigma will
be replicated such that the image that is ultimately used is the same shape as the input image. The values of sigma must be non-negative.
It is only the relative values that are important. A value of 0 means that pixel should not be used in the fit. Other than that, if pixel
A has a higher standard deviation than pixel B, then pixel A is noisier than pixel B and will receive a lower weight when the fit is done.
The weight of a pixel is the usual

weight = 1/(sigma*sigma)

In the case of multifit=F, the sigma values at each pixel along the fit axis in the hyperplane perpendicular to the fit axis which includes
that pixel are averaged and the resultant averaged standard deviation spectrum is the one used in the fit. Internally, sigma values are normalized
such that the maximum value is 1. This mitigates a known overflow issue.

One can write the normalized standard deviation image used in the fit but specifying its name in outsigma. This image can then be
used as sigma for subsequent runs.

RETURNED DICTIONARY STRUCTURE
The returned dictionary has a (necessarily) complex structure. First, there are keys "xUnit" and "yUnit" whose values are
the abscissa unit and the ordinate unit described by simple strings. Next there are arrays giving a broad overview of the
fit quality. These arrays have the shape of the specified region collapsed along the fit axis with the axis corresponding to the fit
axis having length of 1:

attempted: a boolean array indicating which fits were attempted (eg if too few unmasked points, a fit will not be attempted).
converged: a boolean array indicating which fits converged. False if the fit was not attempted.
valid: a boolean array indicating which solutions fall within the specified valid ranges of parameter space
niter: an int array indicating the number of iterations for each profile, &lt;0 if the fit did not converge
ncomps: the number of components (gaussian singlets + lorentzian singlets + gaussian multiplets + polynomial) fit for the profile,
        &lt;0 if the fit did not converge
direction: a string array containing the world direction coordinate for each profile

There is a "type" array having number of dimensions equal to the number of dimensions in the above arrays plus one. The shape of
the first n-1 dimensions is the same as the shape of the above arrays. The length of the last dimension is equal to the number of
components fit. The values of this array are all "POWER LOGARITHMIC POLYNOMIAL".

There will be a subdictionary accessible via the "plp" key which will have
subkeys "soltuion" and "error" which will each have an array of values. Each of these arrays will have one more dimension than the overview arrays
described above. The shape of the first n-1 dimensions will be the same as the shape of the overview arrays described above, while the
final dimension will have length equal to the number of parameters that were fit. Along this axis will be the
corresponding fit result or associated error (depending on the array's associated key) of the fit. In cases where
the fit was not attempted or did not converge, a value of NAN will be present.

OUTPUT IMAGES
In addition to the returned dictionary, optionally one or more of any combination of output images can be written.
The model and residual parameters indicate the names of the model and residual images to be written; blank values inidcate that these images
should not be written.

The parameters plpsol and plperr are the names of the solution and error images to write, respectively.
These images simply contain the arrays described for the associated parameter solutions or errors described in previous sections.
Pixels for which fits were not attempted or did not converge will be
masked as bad. The last axis of these images is a linear axis and repesents coefficient number (and is named accordingly).

res = spxfit(imagename="myspectrum.im", multifit=true, plpest=[0.5,2], plpdiv="1GHz", plpsol="myplpsolutions.im")

</example>
    
</task>

</casaxml>

