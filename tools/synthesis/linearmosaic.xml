<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/tools/xml/casa.xsd">

<!--$Id$-->
 
	<tool name="linearmosaic" module="linearmosaic">
        <shortdescription>combining images in a weighted fashion</shortdescription>
       
<description>
The {\tt linearmosaic} tool (lm) provides a toolkit for stitching images in a weighted fashion.  
</description>
<code>
	<include>tools/synthesis/linearmosaic_forward.h</include>
<private>
	<include>tools/synthesis/linearmosaic_private.h</include>
</private>
</code>

<method type="constructor" name="linearmosaic">
<shortdescription>Construct a linearmosaic tool</shortdescription>

<returns type="linearmosaic"/>

<description>

Create a {\tt linearmosaic} tool.  

</description>

<example>

lm=linearmosaic.create()

</example>
</method>

   <method type="function" name="defineoutputimage">
   <shortdescription>Set the output direction image parameters and name</shortdescription>
   
<description>
Define the direction axes output image parameters.
The output image will get the same number of spectral and polarization planes as the input images.

</description>
<input>

     <param type="int" name="nx">
     <description>Total number of spatial pixels in x</description>
     <value>128</value>
     </param>

     <param type="int" name="ny">
     <description>Total number of spatial pixels in y</description>
     <value>-1</value>
     </param>

     <param type="any" name="cellx">
     <description>Cellsize in x (e.g. '1arcsec')</description>
     <any type="variant" />
     <value>1.0</value>
     </param>

     <param type="any" name="celly">
     <description>Cellsize in y (e.g. '1arcsec')</description>
     <any type="variant" />
     <value></value>
     </param>

     <param type="any" name="imagecenter">
     <description>Direction of phase center as a diretion measure 
     </description>
     <any type="variant" />
     <value>0</value>
     </param>

<param type="string" name="outputimage">
     <description>output image name 
     </description>
     <value></value>
     </param>

<param type="string" name="outputweight">
     <description>output weight image name 
     </description>
     <value></value>
     </param>



</input>
<example>


</example>

<returns type="bool"/>

</method>
<method type="function" name="setoutputimage">
   <shortdescription>Use this function to mosaic on an existing image and weight image</shortdescription>
   
<description>
Use this function if the mosaicing is to be done onto a previous mosaic or image

</description>
<input>

     <param type="string" name="outputimage">
     <description>Existing mosaic imagename</description>
     <value></value>
     </param>

     <param type="string" name="outputweight">
     <description>Existing weight image for mosaic</description>
     <value></value>
     </param>

     <param type="int" name="weighttype">
     <description>what kind of weight is already applied to image \n
      0: flux correct \n
      1: noise flat \n
      2: optimal weight (for example pb^2 applied to image) \n
     </description>
     <value>1</value>
     <allowed kind="enum">
       <value>0</value>
       <value>1</value>
       <value>2</value>
     </allowed>
     </param>



</input>
<example>


</example>

<returns type="bool"/>

</method>

   <method type="function" name="makemosaic">
   <shortdescription>mosaic images in a weighted fashion onto ouput image</shortdescription>
   
<description>
Put the list of images onto the mosaic image using the weight images
</description>
<input>

     <param type="any" name="images">
     <description>Name of images to mosaic</description>
      <any type="variant" />
     <value></value>
     </param>

     <param type="any" name="weightimages">
     <description>Name of images to mosaic</description>
      <any type="variant" />
     <value></value>
     </param>

     <param type="int" name="weighttype">
     <description>what kind of weight is already applied to image \n
      0: flux correct \n
      1: noise flat \n
      2: optimal weight (for example pb^2 applied to image) \n
     </description>
     <value>1</value>
     <allowed kind="enum">
       <value>0</value>
       <value>1</value>
       <value>2</value>
     </allowed>
     </param>

</input>

<returns type="bool"/>
<example>
</example>
<comments>
</comments>
</method>




</tool>




</casaxml>
